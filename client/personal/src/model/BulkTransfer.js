/**
 * GMO Aozora Net Bank Open API
 * <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/personal/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/personal/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div> 
 *
 * OpenAPI spec version: 1.1.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GmoAozoraNetBankOpenApi) {
      root.GmoAozoraNetBankOpenApi = {};
    }
    root.GmoAozoraNetBankOpenApi.BulkTransfer = factory(root.GmoAozoraNetBankOpenApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BulkTransfer model module.
   * @module model/BulkTransfer
   * @version 1.1.12
   */

  /**
   * Constructs a new <code>BulkTransfer</code>.
   * @alias module:model/BulkTransfer
   * @class
   * @param itemId {String} 明細番号 半角数字 重複/0はエラー　1～9999とします 
   * @param beneficiaryBankCode {String} 被仕向金融機関番号 半角数字 
   * @param beneficiaryBranchCode {String} 被仕向支店番号 半角数字 
   * @param accountTypeCode {String} 科目コード（預金種別コード） 半角数字 1：普通、2：当座、4：貯蓄、9：その他 
   * @param accountNumber {String} 口座番号 半角数字 7桁未満の番号は右詰で、前ゼロで埋めること 
   * @param beneficiaryName {String} 受取人名 半角文字 振込許容文字を指定可 ただし、一部の非許容文字は、許容文字に変換を行います 30文字目まで有効（31文字目以降は切り捨てます） 
   * @param transferAmount {String} 振込金額 半角数字 1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可 
   */
  var exports = function(itemId, beneficiaryBankCode, beneficiaryBranchCode, accountTypeCode, accountNumber, beneficiaryName, transferAmount) {
    var _this = this;

    _this['itemId'] = itemId;
    _this['beneficiaryBankCode'] = beneficiaryBankCode;

    _this['beneficiaryBranchCode'] = beneficiaryBranchCode;


    _this['accountTypeCode'] = accountTypeCode;
    _this['accountNumber'] = accountNumber;
    _this['beneficiaryName'] = beneficiaryName;
    _this['transferAmount'] = transferAmount;




  };

  /**
   * Constructs a <code>BulkTransfer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BulkTransfer} obj Optional instance to populate.
   * @return {module:model/BulkTransfer} The populated <code>BulkTransfer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('itemId')) {
        obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
      }
      if (data.hasOwnProperty('beneficiaryBankCode')) {
        obj['beneficiaryBankCode'] = ApiClient.convertToType(data['beneficiaryBankCode'], 'String');
      }
      if (data.hasOwnProperty('beneficiaryBankName')) {
        obj['beneficiaryBankName'] = ApiClient.convertToType(data['beneficiaryBankName'], 'String');
      }
      if (data.hasOwnProperty('beneficiaryBranchCode')) {
        obj['beneficiaryBranchCode'] = ApiClient.convertToType(data['beneficiaryBranchCode'], 'String');
      }
      if (data.hasOwnProperty('beneficiaryBranchName')) {
        obj['beneficiaryBranchName'] = ApiClient.convertToType(data['beneficiaryBranchName'], 'String');
      }
      if (data.hasOwnProperty('clearingHouseName')) {
        obj['clearingHouseName'] = ApiClient.convertToType(data['clearingHouseName'], 'String');
      }
      if (data.hasOwnProperty('accountTypeCode')) {
        obj['accountTypeCode'] = ApiClient.convertToType(data['accountTypeCode'], 'String');
      }
      if (data.hasOwnProperty('accountNumber')) {
        obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
      }
      if (data.hasOwnProperty('beneficiaryName')) {
        obj['beneficiaryName'] = ApiClient.convertToType(data['beneficiaryName'], 'String');
      }
      if (data.hasOwnProperty('transferAmount')) {
        obj['transferAmount'] = ApiClient.convertToType(data['transferAmount'], 'String');
      }
      if (data.hasOwnProperty('newCode')) {
        obj['newCode'] = ApiClient.convertToType(data['newCode'], 'String');
      }
      if (data.hasOwnProperty('ediInfo')) {
        obj['ediInfo'] = ApiClient.convertToType(data['ediInfo'], 'String');
      }
      if (data.hasOwnProperty('transferDesignatedType')) {
        obj['transferDesignatedType'] = ApiClient.convertToType(data['transferDesignatedType'], 'String');
      }
      if (data.hasOwnProperty('identification')) {
        obj['identification'] = ApiClient.convertToType(data['identification'], 'String');
      }
    }
    return obj;
  }

  /**
   * 明細番号 半角数字 重複/0はエラー　1～9999とします 
   * @member {String} itemId
   */
  exports.prototype['itemId'] = undefined;
  /**
   * 被仕向金融機関番号 半角数字 
   * @member {String} beneficiaryBankCode
   */
  exports.prototype['beneficiaryBankCode'] = undefined;
  /**
   * 被仕向金融機関名カナ 半角文字 参考値、処理に利用しません 
   * @member {String} beneficiaryBankName
   */
  exports.prototype['beneficiaryBankName'] = undefined;
  /**
   * 被仕向支店番号 半角数字 
   * @member {String} beneficiaryBranchCode
   */
  exports.prototype['beneficiaryBranchCode'] = undefined;
  /**
   * 被仕向支店名カナ 半角文字 参考値、処理に利用しません 
   * @member {String} beneficiaryBranchName
   */
  exports.prototype['beneficiaryBranchName'] = undefined;
  /**
   * 手形交換所番号 半角文字 入力する場合は、ALL０,ALLスペースであること 参考値、処理に利用しません 
   * @member {String} clearingHouseName
   */
  exports.prototype['clearingHouseName'] = undefined;
  /**
   * 科目コード（預金種別コード） 半角数字 1：普通、2：当座、4：貯蓄、9：その他 
   * @member {String} accountTypeCode
   */
  exports.prototype['accountTypeCode'] = undefined;
  /**
   * 口座番号 半角数字 7桁未満の番号は右詰で、前ゼロで埋めること 
   * @member {String} accountNumber
   */
  exports.prototype['accountNumber'] = undefined;
  /**
   * 受取人名 半角文字 振込許容文字を指定可 ただし、一部の非許容文字は、許容文字に変換を行います 30文字目まで有効（31文字目以降は切り捨てます） 
   * @member {String} beneficiaryName
   */
  exports.prototype['beneficiaryName'] = undefined;
  /**
   * 振込金額 半角数字 1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可 
   * @member {String} transferAmount
   */
  exports.prototype['transferAmount'] = undefined;
  /**
   * 新規コード 半角文字 入力する場合は、数値またはスペースであること 参考値、処理に利用しません 
   * @member {String} newCode
   */
  exports.prototype['newCode'] = undefined;
  /**
   * EDI情報 半角文字 振込許容文字を指定可 
   * @member {String} ediInfo
   */
  exports.prototype['ediInfo'] = undefined;
  /**
   * 振込指定区分 半角文字 入力する場合は、7：電信のみ　またはスペースであること 参考値、処理に利用しません（入力にかかわらず、すべて7：電信扱いとなります） 
   * @member {String} transferDesignatedType
   */
  exports.prototype['transferDesignatedType'] = undefined;
  /**
   * 識別表示 半角文字 本項目が「Y」であればEDI情報は振込先に通知、または省略/NULL/スペースであれば振込先には通知しません 
   * @member {String} identification
   */
  exports.prototype['identification'] = undefined;



  return exports;
}));


