/**
 * GMO Aozora Net Bank Open API
 * <p>Ph2.5向けに作成したもの</p> 
 *
 * OpenAPI spec version: 1.1.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GmoAozoraNetBankOpenApi) {
      root.GmoAozoraNetBankOpenApi = {};
    }
    root.GmoAozoraNetBankOpenApi.VaTransaction = factory(root.GmoAozoraNetBankOpenApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The VaTransaction model module.
   * @module model/VaTransaction
   * @version 1.1.10
   */

  /**
   * Constructs a new <code>VaTransaction</code>.
   * 振込入金口座入金明細情報 
   * @alias module:model/VaTransaction
   * @class
   * @param vaId {String} 振込入金口座ID 半角数字 振込入金口座を識別するID 
   * @param transactionDate {String} 取引日 半角文字 YYYY-MM-DD形式 
   * @param valueDate {String} 起算日 半角文字 YYYY-MM-DD形式 
   * @param vaBranchCode {String} 支店コード 半角数字 
   * @param vaBranchNameKana {String} 支店名カナ 半角文字 
   * @param vaAccountNumber {String} 口座番号 半角数字 
   * @param vaAccountNameKana {String} 口座名義カナ 半角文字 
   * @param depositAmount {String} 入金金額 半角数字 
   * @param remitterNameKana {String} 振込依頼人名カナ 半角文字 
   * @param paymentBankName {String} 仕向金融機関名カナ 半角文字 
   * @param paymentBranchName {String} 仕向支店名カナ 半角文字 
   * @param partnerName {String} サービス企業名 全角文字 振込入金口座契約サービス企業名 
   * @param itemKey {String} 明細キー 半角数字 口座ID毎に設定される明細キー（明細データtimestamp（μs））
   */
  var exports = function(vaId, transactionDate, valueDate, vaBranchCode, vaBranchNameKana, vaAccountNumber, vaAccountNameKana, depositAmount, remitterNameKana, paymentBankName, paymentBranchName, partnerName, itemKey) {
    var _this = this;

    _this['vaId'] = vaId;
    _this['transactionDate'] = transactionDate;
    _this['valueDate'] = valueDate;
    _this['vaBranchCode'] = vaBranchCode;
    _this['vaBranchNameKana'] = vaBranchNameKana;
    _this['vaAccountNumber'] = vaAccountNumber;
    _this['vaAccountNameKana'] = vaAccountNameKana;
    _this['depositAmount'] = depositAmount;
    _this['remitterNameKana'] = remitterNameKana;
    _this['paymentBankName'] = paymentBankName;
    _this['paymentBranchName'] = paymentBranchName;
    _this['partnerName'] = partnerName;

    _this['itemKey'] = itemKey;
  };

  /**
   * Constructs a <code>VaTransaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VaTransaction} obj Optional instance to populate.
   * @return {module:model/VaTransaction} The populated <code>VaTransaction</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('vaId')) {
        obj['vaId'] = ApiClient.convertToType(data['vaId'], 'String');
      }
      if (data.hasOwnProperty('transactionDate')) {
        obj['transactionDate'] = ApiClient.convertToType(data['transactionDate'], 'String');
      }
      if (data.hasOwnProperty('valueDate')) {
        obj['valueDate'] = ApiClient.convertToType(data['valueDate'], 'String');
      }
      if (data.hasOwnProperty('vaBranchCode')) {
        obj['vaBranchCode'] = ApiClient.convertToType(data['vaBranchCode'], 'String');
      }
      if (data.hasOwnProperty('vaBranchNameKana')) {
        obj['vaBranchNameKana'] = ApiClient.convertToType(data['vaBranchNameKana'], 'String');
      }
      if (data.hasOwnProperty('vaAccountNumber')) {
        obj['vaAccountNumber'] = ApiClient.convertToType(data['vaAccountNumber'], 'String');
      }
      if (data.hasOwnProperty('vaAccountNameKana')) {
        obj['vaAccountNameKana'] = ApiClient.convertToType(data['vaAccountNameKana'], 'String');
      }
      if (data.hasOwnProperty('depositAmount')) {
        obj['depositAmount'] = ApiClient.convertToType(data['depositAmount'], 'String');
      }
      if (data.hasOwnProperty('remitterNameKana')) {
        obj['remitterNameKana'] = ApiClient.convertToType(data['remitterNameKana'], 'String');
      }
      if (data.hasOwnProperty('paymentBankName')) {
        obj['paymentBankName'] = ApiClient.convertToType(data['paymentBankName'], 'String');
      }
      if (data.hasOwnProperty('paymentBranchName')) {
        obj['paymentBranchName'] = ApiClient.convertToType(data['paymentBranchName'], 'String');
      }
      if (data.hasOwnProperty('partnerName')) {
        obj['partnerName'] = ApiClient.convertToType(data['partnerName'], 'String');
      }
      if (data.hasOwnProperty('remarks')) {
        obj['remarks'] = ApiClient.convertToType(data['remarks'], 'String');
      }
      if (data.hasOwnProperty('itemKey')) {
        obj['itemKey'] = ApiClient.convertToType(data['itemKey'], 'String');
      }
    }
    return obj;
  }

  /**
   * 振込入金口座ID 半角数字 振込入金口座を識別するID 
   * @member {String} vaId
   */
  exports.prototype['vaId'] = undefined;
  /**
   * 取引日 半角文字 YYYY-MM-DD形式 
   * @member {String} transactionDate
   */
  exports.prototype['transactionDate'] = undefined;
  /**
   * 起算日 半角文字 YYYY-MM-DD形式 
   * @member {String} valueDate
   */
  exports.prototype['valueDate'] = undefined;
  /**
   * 支店コード 半角数字 
   * @member {String} vaBranchCode
   */
  exports.prototype['vaBranchCode'] = undefined;
  /**
   * 支店名カナ 半角文字 
   * @member {String} vaBranchNameKana
   */
  exports.prototype['vaBranchNameKana'] = undefined;
  /**
   * 口座番号 半角数字 
   * @member {String} vaAccountNumber
   */
  exports.prototype['vaAccountNumber'] = undefined;
  /**
   * 口座名義カナ 半角文字 
   * @member {String} vaAccountNameKana
   */
  exports.prototype['vaAccountNameKana'] = undefined;
  /**
   * 入金金額 半角数字 
   * @member {String} depositAmount
   */
  exports.prototype['depositAmount'] = undefined;
  /**
   * 振込依頼人名カナ 半角文字 
   * @member {String} remitterNameKana
   */
  exports.prototype['remitterNameKana'] = undefined;
  /**
   * 仕向金融機関名カナ 半角文字 
   * @member {String} paymentBankName
   */
  exports.prototype['paymentBankName'] = undefined;
  /**
   * 仕向支店名カナ 半角文字 
   * @member {String} paymentBranchName
   */
  exports.prototype['paymentBranchName'] = undefined;
  /**
   * サービス企業名 全角文字 振込入金口座契約サービス企業名 
   * @member {String} partnerName
   */
  exports.prototype['partnerName'] = undefined;
  /**
   * 摘要内容 全半角文字 該当データがない場合は項目自体を設定しません 
   * @member {String} remarks
   */
  exports.prototype['remarks'] = undefined;
  /**
   * 明細キー 半角数字 口座ID毎に設定される明細キー（明細データtimestamp（μs））
   * @member {String} itemKey
   */
  exports.prototype['itemKey'] = undefined;



  return exports;
}));


