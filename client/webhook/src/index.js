/**
 * GMO Aozora Net Bank Open API
 * <p>Ph2.5向けに作成したもの</p> 
 *
 * OpenAPI spec version: 1.1.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Account', 'model/ErrorResponse', 'model/EventType', 'model/SubscribeRequestBody', 'model/VaDepositTransactionMessage', 'model/VaDepositTransactionUnsentResponse', 'model/VaTransaction', 'api/WebhooksApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Account'), require('./model/ErrorResponse'), require('./model/EventType'), require('./model/SubscribeRequestBody'), require('./model/VaDepositTransactionMessage'), require('./model/VaDepositTransactionUnsentResponse'), require('./model/VaTransaction'), require('./api/WebhooksApi'));
  }
}(function(ApiClient, Account, ErrorResponse, EventType, SubscribeRequestBody, VaDepositTransactionMessage, VaDepositTransactionUnsentResponse, VaTransaction, WebhooksApi) {
  'use strict';

  /**
   * pPh2_5p.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var GmoAozoraNetBankOpenApi = require('index'); // See note below*.
   * var xxxSvc = new GmoAozoraNetBankOpenApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new GmoAozoraNetBankOpenApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new GmoAozoraNetBankOpenApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new GmoAozoraNetBankOpenApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.1.10
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The EventType model constructor.
     * @property {module:model/EventType}
     */
    EventType: EventType,
    /**
     * The SubscribeRequestBody model constructor.
     * @property {module:model/SubscribeRequestBody}
     */
    SubscribeRequestBody: SubscribeRequestBody,
    /**
     * The VaDepositTransactionMessage model constructor.
     * @property {module:model/VaDepositTransactionMessage}
     */
    VaDepositTransactionMessage: VaDepositTransactionMessage,
    /**
     * The VaDepositTransactionUnsentResponse model constructor.
     * @property {module:model/VaDepositTransactionUnsentResponse}
     */
    VaDepositTransactionUnsentResponse: VaDepositTransactionUnsentResponse,
    /**
     * The VaTransaction model constructor.
     * @property {module:model/VaTransaction}
     */
    VaTransaction: VaTransaction,
    /**
     * The WebhooksApi service constructor.
     * @property {module:api/WebhooksApi}
     */
    WebhooksApi: WebhooksApi
  };

  return exports;
}));
